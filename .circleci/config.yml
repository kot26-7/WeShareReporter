
version: 2.1
jobs:
  rspec:
    working_directory: ~/myapp
    docker:
      - image: circleci/ruby:2.7.1-buster-node-browsers
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup environment variable
          command: |
            echo "export COMPOSE_FILE=docker-compose.ci.yml" >> $BASH_ENV
      - run:
          name: Start containers
          command: |
            set -x
            docker-compose up -d
      - run:
         name: wait for db
         command: sleep 100
      - run:
          name: Setup database
          command: |
            docker-compose exec web bash -c 'bundle exec rails db:create'
            docker-compose exec web bash -c 'bundle exec rails db:migrate'
      - run:
          name: yarn Install
          command: |
            docker-compose exec web bash -c 'yarn install'
            docker-compose exec web bash -c 'bundle exec bin/webpack'
      - run:
          name: Run rspec
          command: docker-compose exec web rspec

  rubocop:
    working_directory: ~/myapp
    docker:
      - image: circleci/ruby:2.7.1-buster-node-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - blog-bundle-v1-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
            - blog-bundle-v1-
      - run:
          name: Bundler and Yarn
          command: |
            gem install bundler -v '2.1.4' -N
            bundle -v
            bundle install --jobs=3 --retry=3 --path vendor/bundle
            yarn install
      - save_cache:
          paths:
            - ./vendor/bundle
            - ./node_modules
          key: blog-bundle-v1-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel

  heroku_deploy:
    working_directory: ~/myapp
    docker:
      - image: sue445/heroku-cli
    steps:
      - checkout
      - build-tools/install-ci-tools
      - jq/install
      - run:
          name: Identify who I am
          command: echo 'export MY_EMAIL=`heroku auth:whoami | tail -n 1`' >> $BASH_ENV
      - run:
          name: Identify Heroku app names to destroy
          command: echo 'export APP_NAMES_TO_REMOVE=`heroku apps --json | jq -r "map(select(.owner.email == "\"$MY_EMAIL\"" and (.name | contains(\"myapp\")))) | sort_by(.updated_at) | reverse | .[5:] | .[].name"`' >> $BASH_ENV
      - run:
          name: Delete old apps if needed
          command: for app_name in $APP_NAMES_TO_REMOVE; do heroku apps:destroy -a $app_name -c $app_name; done
      - run:
          name: Define Heroku app name to create
          command: timestamp=`date +%Y%m%d%H%M%S` && echo "export HEROKU_APP_NAME=ws-reporter$timestamp" >> $BASH_ENV
      - run:
          name: Create fresh Heroku app
          command: heroku apps:create $HEROKU_APP_NAME --addons=jawsdb:kitefin
      - run:
          name: Deploy
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git main
      - run:
          name: Run post-deploy tasks
          command: |
            heroku config:set ADMIN_USER_EMAIL=$ADMIN_USER_EMAIL ADMIN_USER_PASS=$ADMIN_USER_PASS
            heroku run bin/rails db:migrate
            heroku run bin/rails db:seed
orbs:
  jq: circleci/jq@1.9.1
  build-tools: circleci/build-tools@2.6.3
workflows:
  version: 2.1
  build:
    jobs:
      - rspec
      - rubocop
      - heroku_deploy:
          requires:
            - rspec
            - rubocop