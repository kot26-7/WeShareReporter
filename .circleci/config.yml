version: 2.1
jobs:
  rspec:
    working_directory: ~/myapp
    docker:
      - image: circleci/ruby:2.5.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Setup environment variable
          command: |
            echo "export COMPOSE_FILE=docker-compose.ci.yml" >> $BASH_ENV
      - run:
          name: Start containers and verify it is working
          command: |
            set -x
            docker-compose up -d
            docker exec web_app curl -4 --retry 10 --retry-delay 3 --retry-connrefused http://localhost:3000
      - run:
          name: Create database
          command: |
            docker-compose exec web bash -c 'bundle exec rails db:create'
      - run:
          name: Setup database
          command: |
            docker-compose exec web bash -c 'bundle exec rails db:migrate'
      - run:
          name: Run rspec
          command: docker-compose exec web rspec

  rubocop:
      working_directory: ~/myapp
      docker:
        - image: circleci/ruby:2.5.8
      steps:
        - checkout
        - restore_cache:
            keys:
              - v1-dependencies-{{ checksum "Gemfile.lock" }}
              - v1-dependencies-
        - run:
            name: bundle update
            command: bundle update --bundler
        - run: bundle config --local path vendor/bundle
        - run:
            name: bundle install
            command: bundle check || bundle install --jobs=8 --retry=3 --clean
        - save_cache:
            key: v1-dependencies-{{ checksum "Gemfile.lock" }}
            paths:
              - vendor/bundle
        - run:
            name: Run rubocop
            command: bundle exec rubocop --parallel

  heroku_deploy:
      working_directory: ~/myapp
      docker:
        - image: sue445/heroku-cli
      steps:
        - checkout
        - build-tools/install-ci-tools
        - jq/install
        - run:
            name: Identify who I am
            command: echo 'export MY_EMAIL=`heroku auth:whoami | tail -n 1`' >> $BASH_ENV
        - run:
            name: Identify Heroku app names to destroy
            command: echo 'export APP_NAMES_TO_REMOVE=`heroku apps --json | jq -r "map(select(.owner.email == "\"$MY_EMAIL\"" and (.name | contains(\"myapp\")))) | sort_by(.updated_at) | reverse | .[5:] | .[].name"`' >> $BASH_ENV
        - run:
            name: Delete old apps if needed
            command: for app_name in $APP_NAMES_TO_REMOVE; do heroku apps:destroy -a $app_name -c $app_name; done
        - run:
            name: Define Heroku app name to create
            command: timestamp=`date +%Y%m%d%H%M%S` && echo "export HEROKU_APP_NAME=ws-reporter$timestamp" >> $BASH_ENV
        - run:
            name: Create fresh Heroku app
            command: heroku apps:create $HEROKU_APP_NAME
        - run:
            name: Deploy
            command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git main
        - run:
            name: Run post-deploy tasks
            command: |
              heroku run bin/rails db:migrate
orbs:
  build-tools: circleci/build-tools@2.6.3
  jq: circleci/jq@1.9.1
workflows:
  version: 2.1
  build:
    jobs:
      - rspec
      - rubocop
      - heroku_deploy:
          requires:
            - rspec
            - rubocop